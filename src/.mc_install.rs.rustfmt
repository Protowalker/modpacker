use serde::{Serialize, Deserialize};


#[derive(Serialize, Deserialize, Debug)]
pub struct MojangVersionManifest {
    pub latest: MojangVersionManifestLatest,
    pub versions: Vec<MojangReleaseProfile>
}

impl MojangVersionManifest {
    pub fn look_up_version(&self, version: String) -> Option<&MojangReleaseProfile> {
        self.versions
            .iter()
            .filter(|v| v.id == version).next()
    }

}

#[derive(Serialize, Deserialize, Debug)]
pub struct MojangVersionManifestLatest {
    pub release: String,
    pub snapshot: String
}

#[derive(Serialize, Deserialize, Debug)]
pub struct MojangReleaseProfile {
    pub id: String,
    #[serde(rename = "type")]
    pub release_type: String,
    pub url: String,
    pub time: String,
    #[serde(rename = "releaseTime")]
    pub release_time: String
}


pub mod mojang_version_data {

    use serde::{Serialize, Deserialize};
#[derive(Serialize, Deserialize, Debug)]
pub struct MojangVersionData {
    #[serde(rename = "assetIndex")]
    pub asset_index: AssetIndex,
    pub assets: String,
    downloads: Downloads 
}

#[derive(Serialize, Deserialize, Debug)]
struct Downloads {
    client: DownloadInfo,
    server: DownloadInfo
}

#[derive(Serialize, Deserialize, Debug)]
struct DownloadInfo {

}

#[derive(Serialize, Deserialize, Debug)]
pub struct AssetIndex {
    id: String,
    sha1: String,
    size: u32,
    #[serde(rename = "totalSize")]
    total_size: u32,
    url: String
}
}


//https://launchermeta.mojang.com/mc/game/version_manifest.json


//https://adfoc.us/serve/sitelinks/?id=271228&url=https://files.minecraftforge.net/maven/net/minecraftforge/forge/1.15.2-31.2.33/forge-1.15.2-31.2.33-universal.jar
