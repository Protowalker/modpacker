{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3","program":"/home/protowalker/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","backtrace","/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=3","-Cembed-bitcode=no","-C","debuginfo=2","-C","debug-assertions=on","--cfg","feature=\"backtrace-sys\"","--cfg","feature=\"dbghelp\"","--cfg","feature=\"dbghelp-sys\"","--cfg","feature=\"default\"","--cfg","feature=\"dladdr\"","--cfg","feature=\"kernel32-sys\"","--cfg","feature=\"libbacktrace\"","--cfg","feature=\"libunwind\"","--cfg","feature=\"winapi\"","-C","metadata=cced5d1fe9abb894","-C","extra-filename=-cced5d1fe9abb894","--out-dir","/home/protowalker/Code/Projects/modpacker/target/rls/debug/deps","-L","dependency=/home/protowalker/Code/Projects/modpacker/target/rls/debug/deps","--extern","backtrace_sys=/home/protowalker/Code/Projects/modpacker/target/rls/debug/deps/libbacktrace_sys-4f30ef0916711d3a.rmeta","--extern","cfg_if=/home/protowalker/Code/Projects/modpacker/target/rls/debug/deps/libcfg_if-4e7b3a7225c33580.rmeta","--extern","dbghelp=/home/protowalker/Code/Projects/modpacker/target/rls/debug/deps/libdbghelp-1eb5d5be1bbc1328.rmeta","--extern","kernel32=/home/protowalker/Code/Projects/modpacker/target/rls/debug/deps/libkernel32-46969f1b40154fa8.rmeta","--extern","libc=/home/protowalker/Code/Projects/modpacker/target/rls/debug/deps/liblibc-d1f8e377b299237c.rmeta","--extern","rustc_demangle=/home/protowalker/Code/Projects/modpacker/target/rls/debug/deps/librustc_demangle-8e2171781ec36505.rmeta","--extern","winapi=/home/protowalker/Code/Projects/modpacker/target/rls/debug/deps/libwinapi-702f4be934ad54a5.rmeta","--cap-lints","allow","-L","native=/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-sys-8bf6c137698181fa/out","--error-format=json","--sysroot","/home/protowalker/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/deps/libbacktrace-cced5d1fe9abb894.rmeta"},"prelude":{"crate_id":{"name":"backtrace","disambiguator":[2956988599717937680,14294571484980899096]},"crate_root":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src","external_crates":[{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10344648486569477446,2454248652556920925]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14168888756904427512,16776303916459465465]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17407741297230913278,16283799328799007365]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4492142733197306814,14151866605630611617]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9785299734546160784,636286335322626912]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5680562745065174860,9217186745851755644]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1647702202987759035,15124534591008137148]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16711431240759211485,3970175217288203291]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[125532023394459561,9172165323910118991]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[17639569287364244572,9623243733363078576]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10466182059741283835,56412014413285874]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6793855748667116046,87956666511033926]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15647227138251999113,1639002543540862534]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[10550792004909319356,1806099500584167781]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":15,"id":{"name":"libc","disambiguator":[5649188507473977843,8314817711558098892]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":16,"id":{"name":"kernel32","disambiguator":[14701632226336298765,3001911766114206280]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":17,"id":{"name":"winapi","disambiguator":[9532959667725200244,8947137529169222220]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":18,"id":{"name":"dbghelp","disambiguator":[9189102615429254700,6497501537046488061]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":19,"id":{"name":"cfg_if","disambiguator":[9875272794861368812,8127680246874090063]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","num":20,"id":{"name":"rustc_demangle","disambiguator":[5087800174885527858,14570289133860492862]}},{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/libbacktrace.rs","num":21,"id":{"name":"backtrace_sys","disambiguator":[416402521269785419,2736290755492452321]}}],"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":0,"byte_end":4456,"line_start":1,"line_end":159,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2734,"byte_end":2739,"line_start":88,"line_end":88,"column_start":21,"column_end":26},"alias_span":null,"name":"trace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":15},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2741,"byte_end":2746,"line_start":88,"line_end":88,"column_start":28,"column_end":33},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":43},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2785,"byte_end":2792,"line_start":91,"line_end":91,"column_start":21,"column_end":28},"alias_span":null,"name":"resolve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2794,"byte_end":2800,"line_start":91,"line_end":91,"column_start":30,"column_end":36},"alias_span":null,"name":"Symbol","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":39},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2802,"byte_end":2812,"line_start":91,"line_end":91,"column_start":38,"column_end":48},"alias_span":null,"name":"SymbolName","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2849,"byte_end":2858,"line_start":94,"line_end":94,"column_start":19,"column_end":28},"alias_span":null,"name":"Backtrace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":229},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2860,"byte_end":2874,"line_start":94,"line_end":94,"column_start":30,"column_end":44},"alias_span":null,"name":"BacktraceFrame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":235},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2876,"byte_end":2891,"line_start":94,"line_end":94,"column_start":46,"column_end":61},"alias_span":null,"name":"BacktraceSymbol","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":0,"byte_end":4456,"line_start":1,"line_end":159,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":59},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68}],"decl_id":null,"docs":" A library for acquiring a backtrace at runtime","sig":null,"attributes":[{"value":"! A library for acquiring a backtrace at runtime","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":0,"byte_end":50,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":51,"byte_end":54,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This library is meant to supplement the `RUST_BACKTRACE=1` support of the","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":55,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! standard library by allowing an acquisition of a backtrace at runtime","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":133,"byte_end":206,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"! programmatically. The backtraces generated by this library do not need to be","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":207,"byte_end":287,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"! parsed, for example, and expose the functionality of multiple backend","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":288,"byte_end":361,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"! implementations.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":362,"byte_end":382,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":383,"byte_end":386,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Implementation","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":387,"byte_end":407,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":408,"byte_end":411,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! This library makes use of a number of strategies for actually acquiring a","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":412,"byte_end":489,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"! backtrace. For example unix uses libgcc's libunwind bindings by default to","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":490,"byte_end":568,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"! acquire a backtrace, but dladdr is used on OSX to acquire symbol names while","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":569,"byte_end":649,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"! linux uses gcc's libbacktrace.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":650,"byte_end":684,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":685,"byte_end":688,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! When using the default feature set of this library the \"most reasonable\" set","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":689,"byte_end":769,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"! of defaults is chosen for the current platform, but the features activated","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":770,"byte_end":848,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"! can also be controlled at a finer granularity.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":849,"byte_end":899,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":900,"byte_end":903,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! # Platform Support","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":904,"byte_end":926,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":927,"byte_end":930,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! Currently this library is verified to work on Linux, OSX, and Windows, but","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":931,"byte_end":1009,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"! it may work on other platforms as well. Note that the quality of the","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1010,"byte_end":1082,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"! backtrace may vary across platforms.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1083,"byte_end":1123,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1124,"byte_end":1127,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! # API Principles","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1128,"byte_end":1148,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1149,"byte_end":1152,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! This library attempts to be as flexible as possible to accomodate different","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1153,"byte_end":1232,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"! backend implementations of acquiring a backtrace. Consequently the currently","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1233,"byte_end":1313,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"! exported functions are closure-based as opposed to the likely expected","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1314,"byte_end":1388,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"! iterator-based versions. This is done due to limitations of the underlying","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1389,"byte_end":1467,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"! APIs used from the system.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1468,"byte_end":1498,"line_start":32,"line_end":32,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1499,"byte_end":1502,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1503,"byte_end":1514,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1515,"byte_end":1518,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! First, add this to your Cargo.toml","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1519,"byte_end":1557,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1558,"byte_end":1561,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1562,"byte_end":1573,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"! [dependencies]","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1574,"byte_end":1592,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"! backtrace = \"0.2\"","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1593,"byte_end":1614,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"! ```","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1615,"byte_end":1622,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1623,"byte_end":1626,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! Next:","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1627,"byte_end":1636,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1637,"byte_end":1640,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1641,"byte_end":1648,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"! extern crate backtrace;","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1649,"byte_end":1676,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1677,"byte_end":1680,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1681,"byte_end":1696,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"!     backtrace::trace(|frame| {","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1697,"byte_end":1731,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"!         let ip = frame.ip();","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1732,"byte_end":1764,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"!         let symbol_address = frame.symbol_address();","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1765,"byte_end":1821,"line_start":51,"line_end":51,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1822,"byte_end":1825,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"!         // Resolve this instruction pointer to a symbol name","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1826,"byte_end":1890,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"!         backtrace::resolve(ip, |symbol| {","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1891,"byte_end":1936,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"!             if let Some(name) = symbol.name() {","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1937,"byte_end":1988,"line_start":55,"line_end":55,"column_start":1,"column_end":52}},{"value":"!                 // ...","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":1989,"byte_end":2015,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"!             }","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2016,"byte_end":2033,"line_start":57,"line_end":57,"column_start":1,"column_end":18}},{"value":"!             if let Some(filename) = symbol.filename() {","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2034,"byte_end":2093,"line_start":58,"line_end":58,"column_start":1,"column_end":60}},{"value":"!                 // ...","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2094,"byte_end":2120,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"!             }","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2121,"byte_end":2138,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2139,"byte_end":2154,"line_start":61,"line_end":61,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2155,"byte_end":2158,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"!         true // keep going to the next frame","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2159,"byte_end":2207,"line_start":63,"line_end":63,"column_start":1,"column_end":49}},{"value":"!     });","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2208,"byte_end":2219,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"! }","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2220,"byte_end":2225,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2226,"byte_end":2233,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":2299,"byte_end":2321,"line_start":69,"line_end":69,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":15},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":4789,"byte_end":4794,"line_start":11,"line_end":11,"column_start":11,"column_end":16},"name":"Frame","qualname":"::backtrace::Frame","value":"Frame","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" A trait representing one frame of a backtrace, yielded to the `trace`\n function of this crate.","sig":null,"attributes":[{"value":"/ A trait representing one frame of a backtrace, yielded to the `trace`","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":4500,"byte_end":4573,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ function of this crate.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":4574,"byte_end":4601,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":4602,"byte_end":4605,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The tracing function's closure will be yielded frames, and the frame is","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":4606,"byte_end":4681,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ virtually dispatched as the underlying implementation is not always known","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":4682,"byte_end":4759,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ until runtime.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":4760,"byte_end":4778,"line_start":10,"line_end":10,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5170,"byte_end":5172,"line_start":20,"line_end":20,"column_start":8,"column_end":10},"name":"ip","qualname":"::backtrace::Frame::ip","value":"fn (&self) -> *mut c_void","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Returns the current instruction pointer of this frame.","sig":null,"attributes":[{"value":"/ Returns the current instruction pointer of this frame.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":4801,"byte_end":4859,"line_start":12,"line_end":12,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":4864,"byte_end":4867,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ This is normally the next instruction to execute in the frame, but not","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":4872,"byte_end":4946,"line_start":14,"line_end":14,"column_start":5,"column_end":79}},{"value":"/ all implementations list this with 100% accuracy (but it's generally","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":4951,"byte_end":5023,"line_start":15,"line_end":15,"column_start":5,"column_end":77}},{"value":"/ pretty close).","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5028,"byte_end":5046,"line_start":16,"line_end":16,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5051,"byte_end":5054,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ It is recommended to pass this value to `backtrace::resolve` to turn it","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5059,"byte_end":5134,"line_start":18,"line_end":18,"column_start":5,"column_end":80}},{"value":"/ into a symbol name.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5139,"byte_end":5162,"line_start":19,"line_end":19,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5628,"byte_end":5642,"line_start":30,"line_end":30,"column_start":8,"column_end":22},"name":"symbol_address","qualname":"::backtrace::Frame::symbol_address","value":"fn (&self) -> *mut c_void","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Returns the starting symbol address of the frame of this function.","sig":null,"attributes":[{"value":"/ Returns the starting symbol address of the frame of this function.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5201,"byte_end":5271,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5276,"byte_end":5279,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This will attempt to rewind the instruction pointer returned by `ip` to","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5284,"byte_end":5359,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ the start of the function, returning that value. In some cases, however,","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5364,"byte_end":5440,"line_start":25,"line_end":25,"column_start":5,"column_end":81}},{"value":"/ backends will just return `ip` from this function.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5445,"byte_end":5499,"line_start":26,"line_end":26,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5504,"byte_end":5507,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The returned value can sometimes be used if `backtrace::resolve` failed","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5512,"byte_end":5587,"line_start":28,"line_end":28,"column_start":5,"column_end":80}},{"value":"/ on the `ip` given above.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5592,"byte_end":5620,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":7056,"byte_end":7061,"line_start":69,"line_end":69,"column_start":8,"column_end":13},"name":"trace","qualname":"::backtrace::trace","value":"fn <F> (mut cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inspects the current call-stack, passing all active frames into the closure\n provided to calculate a stack trace.","sig":null,"attributes":[{"value":"/ Inspects the current call-stack, passing all active frames into the closure","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5669,"byte_end":5748,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ provided to calculate a stack trace.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5749,"byte_end":5789,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5790,"byte_end":5793,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This function is the workhorse of this library in calculating the stack","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5794,"byte_end":5869,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ traces for a program. The given closure `cb` is yielded instances of a","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5870,"byte_end":5944,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ `Frame` which represent information about that call frame on the stack. The","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":5945,"byte_end":6024,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ closure is yielded frames in a top-down fashion (most recently called","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6025,"byte_end":6098,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ functions first).","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6099,"byte_end":6120,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6121,"byte_end":6124,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The closure's return value is an indication of whether the backtrace should","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6125,"byte_end":6204,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ continue. A return value of `false` will terminate the backtrace and return","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6205,"byte_end":6284,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ immediately.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6285,"byte_end":6301,"line_start":44,"line_end":44,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6302,"byte_end":6305,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Once a `Frame` is acquired you will likely want to call `backtrace::resolve`","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6306,"byte_end":6386,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ to convert the `ip` (instruction pointer) or symbol address to a `Symbol`","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6387,"byte_end":6464,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ through which the name and/or filename/line number can be learned.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6465,"byte_end":6535,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6536,"byte_end":6539,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Note that this is a relatively low-level function and if you'd like to, for","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6540,"byte_end":6619,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ example, capture a backtrace to be inspected later, then the `Backtrace`","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6620,"byte_end":6696,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ type may be more appropriate.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6697,"byte_end":6730,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6731,"byte_end":6734,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6735,"byte_end":6748,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6749,"byte_end":6752,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6753,"byte_end":6760,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ extern crate backtrace;","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6761,"byte_end":6788,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6789,"byte_end":6792,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6793,"byte_end":6808,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/     backtrace::trace(|frame| {","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6809,"byte_end":6843,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6844,"byte_end":6862,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6863,"byte_end":6866,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/         true // continue the backtrace","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6867,"byte_end":6909,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6910,"byte_end":6921,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6922,"byte_end":6927,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6928,"byte_end":6935,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":6936,"byte_end":6952,"line_start":67,"line_end":67,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8488,"byte_end":8494,"line_start":16,"line_end":16,"column_start":11,"column_end":17},"name":"Symbol","qualname":"::symbolize::Symbol","value":"Symbol","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" A trait representing the resolution of a symbol in a file.","sig":null,"attributes":[{"value":"/ A trait representing the resolution of a symbol in a file.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":7979,"byte_end":8041,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8042,"byte_end":8045,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is yielded as a trait object to the closure given to the","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8046,"byte_end":8117,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ `backtrace::resolve` function, and it is virtually dispatched as it's","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8118,"byte_end":8191,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ unknown which implementation is behind it.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8192,"byte_end":8238,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8239,"byte_end":8242,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A symbol can give contextual information about a funciton, for example the","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8243,"byte_end":8321,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ name, filename, line number, precise address, etc. Not all information is","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8322,"byte_end":8399,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ always available in a symbol, however, so all methods return an `Option`.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8400,"byte_end":8477,"line_start":15,"line_end":15,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8895,"byte_end":8899,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"name","qualname":"::symbolize::Symbol::name","value":"fn (&self) -> Option<SymbolName>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Returns the name of this function.","sig":null,"attributes":[{"value":"/ Returns the name of this function.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8501,"byte_end":8539,"line_start":17,"line_end":17,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8544,"byte_end":8547,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The returned structure can be used to query various properties about the","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8552,"byte_end":8628,"line_start":19,"line_end":19,"column_start":5,"column_end":81}},{"value":"/ symbol name:","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8633,"byte_end":8649,"line_start":20,"line_end":20,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8654,"byte_end":8657,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ * The `Display` implementation will print out the demangled symbol.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8662,"byte_end":8733,"line_start":22,"line_end":22,"column_start":5,"column_end":76}},{"value":"/ * The raw `str` value of the symbol can be accessed (if it's valid","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8738,"byte_end":8808,"line_start":23,"line_end":23,"column_start":5,"column_end":75}},{"value":"/   utf-8).","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8813,"byte_end":8826,"line_start":24,"line_end":24,"column_start":5,"column_end":18}},{"value":"/ * The raw bytes for the symbol name can be accessed.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8831,"byte_end":8887,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9001,"byte_end":9005,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"addr","qualname":"::symbolize::Symbol::addr","value":"fn (&self) -> Option<*mut c_void>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Returns the starting address of this function.\n","sig":null,"attributes":[{"value":"/ Returns the starting address of this function.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":8943,"byte_end":8993,"line_start":28,"line_end":28,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9379,"byte_end":9387,"line_start":37,"line_end":37,"column_start":8,"column_end":16},"name":"filename","qualname":"::symbolize::Symbol::filename","value":"fn (&self) -> Option<&Path>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Returns the file name where this function was defined.","sig":null,"attributes":[{"value":"/ Returns the file name where this function was defined.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9050,"byte_end":9108,"line_start":31,"line_end":31,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9113,"byte_end":9116,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is currently only available when libbacktrace is being used (e.g.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9121,"byte_end":9195,"line_start":33,"line_end":33,"column_start":5,"column_end":79}},{"value":"/ unix platforms other than OSX) and when a binary is compiled with","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9200,"byte_end":9269,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/ debuginfo. If neither of these conditions is met then this will likely","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9274,"byte_end":9348,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ return `None`.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9353,"byte_end":9371,"line_start":36,"line_end":36,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9647,"byte_end":9653,"line_start":43,"line_end":43,"column_start":8,"column_end":14},"name":"lineno","qualname":"::symbolize::Symbol::lineno","value":"fn (&self) -> Option<u32>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Returns the line number for where this symbol is currently executing.","sig":null,"attributes":[{"value":"/ Returns the line number for where this symbol is currently executing.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9426,"byte_end":9499,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9504,"byte_end":9507,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This return value is typically `Some` if `filename` returns `Some`, and","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9512,"byte_end":9587,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/ is consequently subject to similar caveats.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9592,"byte_end":9639,"line_start":42,"line_end":42,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":39},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9828,"byte_end":9838,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"SymbolName","qualname":"::symbolize::SymbolName","value":"SymbolName {  }","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"decl_id":null,"docs":" A wrapper around a symbol name to provide ergonomic accessors to the\n demangled name, the raw bytes, the raw string, etc.\n","sig":null,"attributes":[{"value":"/ A wrapper around a symbol name to provide ergonomic accessors to the","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9688,"byte_end":9760,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/ demangled name, the raw bytes, the raw string, etc.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9761,"byte_end":9816,"line_start":47,"line_end":47,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10815,"byte_end":10822,"line_start":83,"line_end":83,"column_start":8,"column_end":15},"name":"resolve","qualname":"::symbolize::resolve","value":"fn <F> (addr: *mut c_void, mut cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resolve an address to a symbol, passing the symbol to the specified\n closure.","sig":null,"attributes":[{"value":"/ Resolve an address to a symbol, passing the symbol to the specified","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9906,"byte_end":9977,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ closure.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9978,"byte_end":9990,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9991,"byte_end":9994,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This function will look up the given address in areas such as the local","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":9995,"byte_end":10070,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ symbol table, dynamic symbol table, or DWARF debug info (depending on the","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10071,"byte_end":10148,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ activated implementation) to find symbols to yield.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10149,"byte_end":10204,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10205,"byte_end":10208,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The closure may not be called if resolution could not be performed, and it","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10209,"byte_end":10287,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ also may be called more than once in the case of inlined functions.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10288,"byte_end":10359,"line_start":61,"line_end":61,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10360,"byte_end":10363,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Symbols yielded represent the execution at the specified `addr`, returning","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10364,"byte_end":10442,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ file/line pairs for that addres (if available).","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10443,"byte_end":10494,"line_start":64,"line_end":64,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10495,"byte_end":10498,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10499,"byte_end":10512,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10513,"byte_end":10516,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10517,"byte_end":10524,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ extern crate backtrace;","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10525,"byte_end":10552,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10553,"byte_end":10556,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10557,"byte_end":10572,"line_start":71,"line_end":71,"column_start":1,"column_end":16}},{"value":"/     backtrace::trace(|frame| {","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10573,"byte_end":10607,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/         let ip = frame.ip();","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10608,"byte_end":10640,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10641,"byte_end":10644,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/         backtrace::resolve(ip, |symbol| {","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10645,"byte_end":10690,"line_start":75,"line_end":75,"column_start":1,"column_end":46}},{"value":"/             // ...","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10691,"byte_end":10713,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/         });","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10714,"byte_end":10729,"line_start":77,"line_end":77,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10730,"byte_end":10733,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/         false // only look at the top frame","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10734,"byte_end":10781,"line_start":79,"line_end":79,"column_start":1,"column_end":48}},{"value":"/     });","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10782,"byte_end":10793,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10794,"byte_end":10799,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10800,"byte_end":10807,"line_start":82,"line_end":82,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":11548,"byte_end":11551,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<SymbolName>::new","value":"fn (bytes: &'a [u8]) -> SymbolName<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbol name from the raw underlying bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new symbol name from the raw underlying bytes.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":11476,"byte_end":11536,"line_start":107,"line_end":107,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":11841,"byte_end":11847,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"as_str","qualname":"<SymbolName>::as_str","value":"fn (&self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw symbol name as `&str` if the symbols is valid utf-8.\n","sig":null,"attributes":[{"value":"/ Returns the raw symbol name as `&str` if the symbols is valid utf-8.","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":11757,"byte_end":11829,"line_start":116,"line_end":116,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":12001,"byte_end":12009,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<SymbolName>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw symbol name as a list of bytes\n","sig":null,"attributes":[{"value":"/ Returns the raw symbol name as a list of bytes","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":11939,"byte_end":11989,"line_start":121,"line_end":121,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":225},"span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7985499,"byte_end":7985508,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"Backtrace","qualname":"::capture::Backtrace","value":"Backtrace {  }","parent":null,"children":[{"krate":0,"index":226}],"decl_id":null,"docs":" Representation of an owned and self-contained backtrace.","sig":null,"attributes":[{"value":"/ Representation of an owned and self-contained backtrace.","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7985158,"byte_end":7985218,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7985219,"byte_end":7985222,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This structure can be used to capture a backtrace at various points in a","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7985223,"byte_end":7985299,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ program and later used to inspect what the backtrace was at that time.","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7985300,"byte_end":7985374,"line_start":26,"line_end":26,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":229},"span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7985844,"byte_end":7985858,"line_start":41,"line_end":41,"column_start":12,"column_end":26},"name":"BacktraceFrame","qualname":"::capture::BacktraceFrame","value":"BacktraceFrame {  }","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"decl_id":null,"docs":" Captured version of a frame in a backtrace.","sig":null,"attributes":[{"value":"/ Captured version of a frame in a backtrace.","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7985547,"byte_end":7985594,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7985595,"byte_end":7985598,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This type is returned as a list from `Backtrace::frames` and represents one","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7985599,"byte_end":7985678,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ stack frame in a captured backtrace.","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7985679,"byte_end":7985719,"line_start":37,"line_end":37,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":235},"span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986246,"byte_end":7986261,"line_start":54,"line_end":54,"column_start":12,"column_end":27},"name":"BacktraceSymbol","qualname":"::capture::BacktraceSymbol","value":"BacktraceSymbol {  }","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"decl_id":null,"docs":" Captured version of a symbol in a backtrace.","sig":null,"attributes":[{"value":"/ Captured version of a symbol in a backtrace.","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7985941,"byte_end":7985989,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7985990,"byte_end":7985993,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This type is returned as a list from `BacktraceFrame::symbols` and","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7985994,"byte_end":7986064,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/ represents the metadata for a symbol in a backtrace.","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986065,"byte_end":7986121,"line_start":50,"line_end":50,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986910,"byte_end":7986913,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<Backtrace>::new","value":"fn () -> Backtrace","parent":null,"children":[],"decl_id":null,"docs":" Captures a backtrace at the callsite of this function, returning an\n owned representation.","sig":null,"attributes":[{"value":"/ Captures a backtrace at the callsite of this function, returning an","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986396,"byte_end":7986467,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/ owned representation.","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986472,"byte_end":7986497,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986502,"byte_end":7986505,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function is useful for representing a backtrace as an object in","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986510,"byte_end":7986582,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ Rust. This returned value can be sent across threads and printed","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986587,"byte_end":7986655,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/ elsewhere, and thie purpose of this value is to be entirely self","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986660,"byte_end":7986728,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ contained.","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986733,"byte_end":7986747,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986752,"byte_end":7986755,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986760,"byte_end":7986774,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986779,"byte_end":7986782,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986787,"byte_end":7986794,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use backtrace::Backtrace;","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986799,"byte_end":7986828,"line_start":73,"line_end":73,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986833,"byte_end":7986836,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let current_backtrace = Backtrace::new();","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986841,"byte_end":7986886,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986891,"byte_end":7986898,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7987954,"byte_end":7987960,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"frames","qualname":"<Backtrace>::frames","value":"fn (&self) -> &[BacktraceFrame]","parent":null,"children":[],"decl_id":null,"docs":" Returns the frames from when this backtrace was captured.","sig":null,"attributes":[{"value":"/ Returns the frames from when this backtrace was captured.","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7987687,"byte_end":7987748,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7987753,"byte_end":7987756,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The first entry of this slice is likely the function `Backtrace::new`,","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7987761,"byte_end":7987835,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ and the last frame is likely something about how this thread or the main","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7987840,"byte_end":7987916,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ function started.","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7987921,"byte_end":7987942,"line_start":104,"line_end":104,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7988624,"byte_end":7988631,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"symbols","qualname":"<BacktraceFrame>::symbols","value":"fn (&self) -> &[BacktraceSymbol]","parent":null,"children":[],"decl_id":null,"docs":" Returns the list of symbols that this frame corresponds to.","sig":null,"attributes":[{"value":"/ Returns the list of symbols that this frame corresponds to.","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7988249,"byte_end":7988312,"line_start":121,"line_end":121,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7988317,"byte_end":7988320,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Normally there is only one symbol per frame, but sometimes if a number","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7988325,"byte_end":7988399,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ of functions are inlined into one frame then multiple symbols will be","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7988404,"byte_end":7988477,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ returned. The first symbol listed is the \"innermost function\", whereas","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7988482,"byte_end":7988556,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ the last symbol is the outermost (last caller).","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7988561,"byte_end":7988612,"line_start":126,"line_end":126,"column_start":5,"column_end":56}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":7147,"byte_end":7152,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/libunwind.rs","byte_start":7972124,"byte_end":7972135,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10928,"byte_end":10934,"line_start":87,"line_end":87,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":11455,"byte_end":11465,"line_start":106,"line_end":106,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":12085,"byte_end":12095,"line_start":127,"line_end":127,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":12343,"byte_end":12353,"line_start":137,"line_end":137,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/libbacktrace.rs","byte_start":7979747,"byte_end":7979760,"line_start":41,"line_end":41,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/libbacktrace.rs","byte_start":7980667,"byte_end":7980679,"line_start":75,"line_end":75,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986380,"byte_end":7986389,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7988036,"byte_end":7988050,"line_start":110,"line_end":110,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7988228,"byte_end":7988242,"line_start":120,"line_end":120,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7988710,"byte_end":7988725,"line_start":132,"line_end":132,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7989109,"byte_end":7989118,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7990231,"byte_end":7990240,"line_start":185,"line_end":185,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":3056,"byte_end":3060,"line_start":105,"line_end":105,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":3556,"byte_end":3565,"line_start":125,"line_end":125,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/mod.rs","byte_start":7147,"byte_end":7152,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":15},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/backtrace/libunwind.rs","byte_start":7972124,"byte_end":7972135,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":91},"to":{"krate":0,"index":15}},{"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":10928,"byte_end":10934,"line_start":87,"line_end":87,"column_start":21,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":34},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":11455,"byte_end":11465,"line_start":106,"line_end":106,"column_start":10,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":12085,"byte_end":12095,"line_start":127,"line_end":127,"column_start":27,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/mod.rs","byte_start":12343,"byte_end":12353,"line_start":137,"line_end":137,"column_start":25,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/libbacktrace.rs","byte_start":7979747,"byte_end":7979760,"line_start":41,"line_end":41,"column_start":21,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":164},"to":{"krate":0,"index":34}},{"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/symbolize/libbacktrace.rs","byte_start":7980667,"byte_end":7980679,"line_start":75,"line_end":75,"column_start":21,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":171},"to":{"krate":0,"index":34}},{"span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7986380,"byte_end":7986389,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7988036,"byte_end":7988050,"line_start":110,"line_end":110,"column_start":16,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":229},"to":{"krate":0,"index":15}},{"span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7988228,"byte_end":7988242,"line_start":120,"line_end":120,"column_start":6,"column_end":20},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7988710,"byte_end":7988725,"line_start":132,"line_end":132,"column_start":17,"column_end":32},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":235},"to":{"krate":0,"index":34}},{"span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7989109,"byte_end":7989118,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":225},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/protowalker/Code/Projects/modpacker/target/rls/debug/build/backtrace-2bfe6d810e020ddf/out/capture.rs","byte_start":7990231,"byte_end":7990240,"line_start":185,"line_end":185,"column_start":18,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":225},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":3056,"byte_end":3060,"line_start":105,"line_end":105,"column_start":15,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":64},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/protowalker/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.2.3/src/lib.rs","byte_start":3556,"byte_end":3565,"line_start":125,"line_end":125,"column_start":19,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":76},"to":{"krate":2,"index":2098}}]}